// Code generated by MockGen. DO NOT EDIT.
// Source: connectivityCaching.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	browser "github.com/sp0x/surf/browser"
	reflect "reflect"
)

// MockConnectivityTester is a mock of ConnectivityTester interface
type MockConnectivityTester struct {
	ctrl     *gomock.Controller
	recorder *MockConnectivityTesterMockRecorder
}

// MockConnectivityTesterMockRecorder is the mock recorder for MockConnectivityTester
type MockConnectivityTesterMockRecorder struct {
	mock *MockConnectivityTester
}

// NewMockConnectivityTester creates a new mock instance
func NewMockConnectivityTester(ctrl *gomock.Controller) *MockConnectivityTester {
	mock := &MockConnectivityTester{ctrl: ctrl}
	mock.recorder = &MockConnectivityTesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConnectivityTester) EXPECT() *MockConnectivityTesterMockRecorder {
	return m.recorder
}

// IsOkAndSet mocks base method
func (m *MockConnectivityTester) IsOkAndSet(u string, f func() bool) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsOkAndSet", u, f)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsOkAndSet indicates an expected call of IsOkAndSet
func (mr *MockConnectivityTesterMockRecorder) IsOkAndSet(u, f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsOkAndSet", reflect.TypeOf((*MockConnectivityTester)(nil).IsOkAndSet), u, f)
}

// Test mocks base method
func (m *MockConnectivityTester) Test(u string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Test", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// Test indicates an expected call of Test
func (mr *MockConnectivityTesterMockRecorder) Test(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test", reflect.TypeOf((*MockConnectivityTester)(nil).Test), u)
}

// SetBrowser mocks base method
func (m *MockConnectivityTester) SetBrowser(bow *browser.Browser) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetBrowser", bow)
}

// SetBrowser indicates an expected call of SetBrowser
func (mr *MockConnectivityTesterMockRecorder) SetBrowser(bow interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBrowser", reflect.TypeOf((*MockConnectivityTester)(nil).SetBrowser), bow)
}

// ClearBrowser mocks base method
func (m *MockConnectivityTester) ClearBrowser() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ClearBrowser")
}

// ClearBrowser indicates an expected call of ClearBrowser
func (mr *MockConnectivityTesterMockRecorder) ClearBrowser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearBrowser", reflect.TypeOf((*MockConnectivityTester)(nil).ClearBrowser))
}
